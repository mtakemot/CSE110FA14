/*
 * Team 42
 * CSE 110, Fall 2014
 *  
 * Author(s):Zachary Preece-Scaringe
 * 
 * Summary: Settings Panel
 */

package PresentationLayer;

import LogicLayer.UserAccount;
import javax.swing.*;
import java.awt.*;
import java.awt.font.TextAttribute;
import java.util.Map;

public class Settings extends javax.swing.JPanel
{

    /**
     * Creates new form Settings
     */
    private JPanel MainPanel;
    private GUI mainGUI;
    private Font thefont;
    private ImageIcon icon;

    public Settings()
    {
        initComponents();
    }

    /*This constructor takes in MainPanel and mainGUI from GUI.java which gives us access to
     the main panel and ther panels public methods */
    public Settings(JPanel MainPanel, GUI mainGUI)
    {
        icon = new javax.swing.ImageIcon(getClass().getResource("/Assets/rsz_2icon.png"));
        this.MainPanel = MainPanel;
        this.mainGUI = mainGUI;

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        SettingsTitle = new javax.swing.JLabel();
        errorMessage = new javax.swing.JLabel()
        {
            protected void paintComponent(Graphics g)
            {
                g.setColor( getBackground() );
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        };
        SettingsMainPanel = new javax.swing.JPanel()
        {
            protected void paintComponent(Graphics g)
            {
                g.setColor(getBackground());
                g.fillRect(0, 0, getWidth(), getHeight());
                super.paintComponent(g);
            }
        };
        DeleteAccountButton = new javax.swing.JButton();
        HomeButton = new javax.swing.JButton();
        FirstNameLabelPanel = new javax.swing.JPanel();
        LastName = new javax.swing.JLabel();
        LastNameLabelPanel = new javax.swing.JPanel();
        FirstName = new javax.swing.JLabel();
        UsernameLabelPanel = new javax.swing.JPanel();
        Username = new javax.swing.JLabel();
        EmailLabelPanel = new javax.swing.JPanel();
        Email = new javax.swing.JLabel();
        PhoneNumberLabelPanel = new javax.swing.JPanel();
        PhoneNumber = new javax.swing.JLabel();
        PasswordLabelPanel = new javax.swing.JPanel();
        Password = new javax.swing.JLabel();
        LastNameEditLabelPanel = new javax.swing.JPanel();
        EditLabel = new javax.swing.JLabel();
        FirstNameEditLabelPanel = new javax.swing.JPanel();
        EditLabel1 = new javax.swing.JLabel();
        PhoneNumberEditLabelPanel = new javax.swing.JPanel();
        EditLabel4 = new javax.swing.JLabel();
        UsernameEditLabelPanel = new javax.swing.JPanel();
        EditLabel2 = new javax.swing.JLabel();
        EmailEditLabelPanel = new javax.swing.JPanel();
        EditLabel3 = new javax.swing.JLabel();
        UserLastNamePanel = new javax.swing.JPanel();
        UserLastName = new javax.swing.JLabel();
        UserFirstNamePanel = new javax.swing.JPanel();
        UserFirstName = new javax.swing.JLabel();
        UserUsernamePanel = new javax.swing.JPanel();
        UserUsername = new javax.swing.JLabel();
        UserEmailPanel = new javax.swing.JPanel();
        UserEmail = new javax.swing.JLabel();
        UserPhoneNumberPanel = new javax.swing.JPanel();
        UserPhoneNumber = new javax.swing.JLabel();
        UserPasswordPanel = new javax.swing.JPanel();
        UserPassword = new javax.swing.JLabel();
        PasswordEditLabelPanel = new javax.swing.JPanel();
        EditLabel5 = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.GridBagLayout());

        SettingsTitle.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        SettingsTitle.setForeground(new java.awt.Color(204, 255, 204));
        SettingsTitle.setText("Settings");
        SettingsTitle.setMaximumSize(new java.awt.Dimension(199, 100));
        SettingsTitle.setMinimumSize(new java.awt.Dimension(199, 100));
        SettingsTitle.setPreferredSize(new java.awt.Dimension(199, 100));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(SettingsTitle, gridBagConstraints);

        errorMessage.setBackground(new Color(255,255,255,0));
        errorMessage.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        errorMessage.setForeground(new java.awt.Color(204, 255, 204));
        errorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorMessage.setText("Click Below to Edit Settings");
        errorMessage.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(125, 0, 0, 0);
        add(errorMessage, gridBagConstraints);

        SettingsMainPanel.setBackground(new Color (0,255,255,0));
        SettingsMainPanel.setName(""); // NOI18N
        SettingsMainPanel.setOpaque(false);
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 0, 0, 0, 0, 0, 0};
        jPanel1Layout.rowHeights = new int[] {0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0, 8, 0};
        SettingsMainPanel.setLayout(jPanel1Layout);

        DeleteAccountButton.setBackground(new java.awt.Color(255, 255, 255));
        DeleteAccountButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DeleteAccountButton.setForeground(new java.awt.Color(14, 118, 188));
        DeleteAccountButton.setText("Delete Main Account");
        DeleteAccountButton.setOpaque(false);
        DeleteAccountButton.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                DeleteAccountButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(DeleteAccountButton, gridBagConstraints);

        HomeButton.setBackground(new java.awt.Color(255, 255, 255));
        HomeButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        HomeButton.setForeground(new java.awt.Color(14, 118, 188));
        HomeButton.setText("Home");
        HomeButton.setOpaque(false);
        HomeButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                HomeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(HomeButton, gridBagConstraints);

        FirstNameLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        FirstNameLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FirstNameLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                FirstNameLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                FirstNameLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                FirstNameLabelPanelMouseExited(evt);
            }
        });
        java.awt.GridBagLayout jPanel3Layout = new java.awt.GridBagLayout();
        jPanel3Layout.columnWidths = new int[] {0};
        jPanel3Layout.rowHeights = new int[] {0};
        FirstNameLabelPanel.setLayout(jPanel3Layout);

        LastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LastName.setForeground(new java.awt.Color(51, 0, 255));
        LastName.setText("Last Name:");
        LastName.setMaximumSize(new java.awt.Dimension(91, 15));
        LastName.setMinimumSize(new java.awt.Dimension(91, 15));
        LastName.setPreferredSize(new java.awt.Dimension(91, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        FirstNameLabelPanel.add(LastName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(FirstNameLabelPanel, gridBagConstraints);

        LastNameLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        LastNameLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LastNameLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                LastNameLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                LastNameLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                LastNameLabelPanelMouseExited(evt);
            }
        });
        java.awt.GridBagLayout jPanel4Layout = new java.awt.GridBagLayout();
        jPanel4Layout.columnWidths = new int[] {0};
        jPanel4Layout.rowHeights = new int[] {0};
        LastNameLabelPanel.setLayout(jPanel4Layout);

        FirstName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FirstName.setForeground(new java.awt.Color(51, 0, 255));
        FirstName.setText("First Name:      ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        LastNameLabelPanel.add(FirstName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(LastNameLabelPanel, gridBagConstraints);

        UsernameLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        UsernameLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UsernameLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UsernameLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UsernameLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UsernameLabelPanelMouseExited(evt);
            }
        });
        java.awt.GridBagLayout jPanel5Layout = new java.awt.GridBagLayout();
        jPanel5Layout.columnWidths = new int[] {0};
        jPanel5Layout.rowHeights = new int[] {0};
        UsernameLabelPanel.setLayout(jPanel5Layout);

        Username.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Username.setForeground(new java.awt.Color(51, 0, 255));
        Username.setText("Username:       ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        UsernameLabelPanel.add(Username, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UsernameLabelPanel, gridBagConstraints);

        EmailLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        EmailLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmailLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EmailLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EmailLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EmailLabelPanelMouseExited(evt);
            }
        });
        java.awt.GridBagLayout jPanel6Layout = new java.awt.GridBagLayout();
        jPanel6Layout.columnWidths = new int[] {0};
        jPanel6Layout.rowHeights = new int[] {0};
        EmailLabelPanel.setLayout(jPanel6Layout);

        Email.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Email.setForeground(new java.awt.Color(51, 0, 255));
        Email.setText("Email:              ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        EmailLabelPanel.add(Email, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(EmailLabelPanel, gridBagConstraints);

        PhoneNumberLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        PhoneNumberLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PhoneNumberLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                PhoneNumberLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                PhoneNumberLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                PhoneNumberLabelPanelMouseExited(evt);
            }
        });
        java.awt.GridBagLayout jPanel7Layout = new java.awt.GridBagLayout();
        jPanel7Layout.columnWidths = new int[] {0};
        jPanel7Layout.rowHeights = new int[] {0};
        PhoneNumberLabelPanel.setLayout(jPanel7Layout);

        PhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PhoneNumber.setForeground(new java.awt.Color(51, 0, 255));
        PhoneNumber.setText("Phone Number:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        PhoneNumberLabelPanel.add(PhoneNumber, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(PhoneNumberLabelPanel, gridBagConstraints);

        PasswordLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        PasswordLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PasswordLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                PasswordLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                PasswordLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                PasswordLabelPanelMouseExited(evt);
            }
        });
        java.awt.GridBagLayout jPanel8Layout = new java.awt.GridBagLayout();
        jPanel8Layout.columnWidths = new int[] {0};
        jPanel8Layout.rowHeights = new int[] {0};
        PasswordLabelPanel.setLayout(jPanel8Layout);

        Password.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Password.setForeground(new java.awt.Color(51, 0, 255));
        Password.setText("Password:        ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        PasswordLabelPanel.add(Password, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(PasswordLabelPanel, gridBagConstraints);

        LastNameEditLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        LastNameEditLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LastNameEditLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                LastNameEditLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                LastNameEditLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                LastNameEditLabelPanelMouseExited(evt);
            }
        });
        LastNameEditLabelPanel.setLayout(new java.awt.GridBagLayout());

        EditLabel.setForeground(new java.awt.Color(51, 0, 255));
        EditLabel.setText("Edit");
        EditLabel.setFocusable(false);
        EditLabel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EditLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EditLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EditLabelMouseExited(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        LastNameEditLabelPanel.add(EditLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(LastNameEditLabelPanel, gridBagConstraints);

        FirstNameEditLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        FirstNameEditLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        FirstNameEditLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                FirstNameEditLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                FirstNameEditLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                FirstNameEditLabelPanelMouseExited(evt);
            }
        });

        EditLabel1.setForeground(new java.awt.Color(51, 0, 255));
        EditLabel1.setText("Edit");
        EditLabel1.setFocusable(false);
        EditLabel1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EditLabel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EditLabel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EditLabel1MouseExited(evt);
            }
        });
        FirstNameEditLabelPanel.add(EditLabel1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(FirstNameEditLabelPanel, gridBagConstraints);

        PhoneNumberEditLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        PhoneNumberEditLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PhoneNumberEditLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                PhoneNumberEditLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                PhoneNumberEditLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                PhoneNumberEditLabelPanelMouseExited(evt);
            }
        });

        EditLabel4.setForeground(new java.awt.Color(51, 0, 255));
        EditLabel4.setText("Edit");
        EditLabel4.setFocusable(false);
        EditLabel4.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EditLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EditLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EditLabel4MouseExited(evt);
            }
        });
        PhoneNumberEditLabelPanel.add(EditLabel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(PhoneNumberEditLabelPanel, gridBagConstraints);

        UsernameEditLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        UsernameEditLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UsernameEditLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UsernameEditLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UsernameEditLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UsernameEditLabelPanelMouseExited(evt);
            }
        });

        EditLabel2.setForeground(new java.awt.Color(51, 0, 255));
        EditLabel2.setText("Edit");
        EditLabel2.setFocusable(false);
        EditLabel2.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EditLabel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EditLabel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EditLabel2MouseExited(evt);
            }
        });
        UsernameEditLabelPanel.add(EditLabel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UsernameEditLabelPanel, gridBagConstraints);

        EmailEditLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        EmailEditLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmailEditLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EmailEditLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EmailEditLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EmailEditLabelPanelMouseExited(evt);
            }
        });

        EditLabel3.setForeground(new java.awt.Color(51, 0, 255));
        EditLabel3.setText("Edit");
        EditLabel3.setFocusable(false);
        EditLabel3.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EditLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EditLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EditLabel3MouseExited(evt);
            }
        });
        EmailEditLabelPanel.add(EditLabel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(EmailEditLabelPanel, gridBagConstraints);

        UserLastNamePanel.setBackground(new java.awt.Color(153, 255, 153));
        UserLastNamePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserLastNamePanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UserLastNamePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UserLastNamePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UserLastNamePanelMouseExited(evt);
            }
        });

        UserLastName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserLastName.setForeground(new java.awt.Color(51, 0, 255));
        UserLastName.setText("jLabel2");
        UserLastNamePanel.add(UserLastName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UserLastNamePanel, gridBagConstraints);

        UserFirstNamePanel.setBackground(new java.awt.Color(153, 255, 153));
        UserFirstNamePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserFirstNamePanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UserFirstNamePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UserFirstNamePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UserFirstNamePanelMouseExited(evt);
            }
        });

        UserFirstName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserFirstName.setForeground(new java.awt.Color(51, 0, 255));
        UserFirstName.setText("jLabel3");
        UserFirstNamePanel.add(UserFirstName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UserFirstNamePanel, gridBagConstraints);

        UserUsernamePanel.setBackground(new java.awt.Color(153, 255, 153));
        UserUsernamePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserUsernamePanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UserUsernamePanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UserUsernamePanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UserUsernamePanelMouseExited(evt);
            }
        });

        UserUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserUsername.setForeground(new java.awt.Color(51, 0, 255));
        UserUsername.setText("jLabel4");
        UserUsernamePanel.add(UserUsername);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UserUsernamePanel, gridBagConstraints);

        UserEmailPanel.setBackground(new java.awt.Color(153, 255, 153));
        UserEmailPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserEmailPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UserEmailPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UserEmailPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UserEmailPanelMouseExited(evt);
            }
        });

        UserEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserEmail.setForeground(new java.awt.Color(51, 0, 255));
        UserEmail.setText("jLabel5");
        UserEmailPanel.add(UserEmail);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UserEmailPanel, gridBagConstraints);

        UserPhoneNumberPanel.setBackground(new java.awt.Color(153, 255, 153));
        UserPhoneNumberPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserPhoneNumberPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UserPhoneNumberPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UserPhoneNumberPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UserPhoneNumberPanelMouseExited(evt);
            }
        });

        UserPhoneNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserPhoneNumber.setForeground(new java.awt.Color(51, 0, 255));
        UserPhoneNumber.setText("jLabel6");
        UserPhoneNumberPanel.add(UserPhoneNumber);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UserPhoneNumberPanel, gridBagConstraints);

        UserPasswordPanel.setBackground(new java.awt.Color(153, 255, 153));
        UserPasswordPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UserPasswordPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                UserPasswordPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                UserPasswordPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                UserPasswordPanelMouseExited(evt);
            }
        });

        UserPassword.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        UserPassword.setForeground(new java.awt.Color(51, 0, 255));
        UserPassword.setText("*****");
        UserPasswordPanel.add(UserPassword);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(UserPasswordPanel, gridBagConstraints);

        PasswordEditLabelPanel.setBackground(new java.awt.Color(153, 255, 153));
        PasswordEditLabelPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PasswordEditLabelPanel.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                PasswordEditLabelPanelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                PasswordEditLabelPanelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                PasswordEditLabelPanelMouseExited(evt);
            }
        });

        EditLabel5.setForeground(new java.awt.Color(51, 0, 255));
        EditLabel5.setText("Edit");
        EditLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EditLabel5.setFocusable(false);
        EditLabel5.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                EditLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt)
            {
                EditLabel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt)
            {
                EditLabel5MouseExited(evt);
            }
        });
        PasswordEditLabelPanel.add(EditLabel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        SettingsMainPanel.add(PasswordEditLabelPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(SettingsMainPanel, gridBagConstraints);

        Background.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/wallpaper_abstract_wallpapers_00250_wallpapersuggest_com-HD.jpg"))); // NOI18N
        Background.setMaximumSize(new java.awt.Dimension(800, 600));
        Background.setMinimumSize(new java.awt.Dimension(800, 600));
        Background.setPreferredSize(new java.awt.Dimension(800, 600));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(Background, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    
    //update labels on this page when user data is changed
    public void update()
    {
        UserLastName.setText(GUI.currentUserAccount.getLastName());
        UserFirstName.setText(GUI.currentUserAccount.getFirstName());
        UserUsername.setText(GUI.currentUserAccount.getUserName());
        UserEmail.setText(GUI.currentUserAccount.getEmail());
        UserPhoneNumber.setText(GUI.currentUserAccount.getPhone());
    }

    //deletes a user account
    private void DeleteAccountButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteAccountButtonMouseClicked

        //panel which will deal with input
        JPanel passpanel = mainGUI.getPass().GetPanel();
        
        //popup with password retrieval panel
        int choice = JOptionPane.showConfirmDialog(
                null,
                passpanel,    //show password panel in popup
                "Bank 42",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                GUI.icon
        );

        //if user did not cancel
        if (choice == 0)
        {
            //get password from passwordpanel
            String password = mainGUI.getPass().GetPassword();
            
            //error popup for invalid password
            if (!(GUI.currentUserAccount.validatePassword(password)))
            {
                JOptionPane.showMessageDialog(null, "Incorrect password!", "Error!",
                        0, GUI.icon);
                return;
            }

            //confirmation dialog (popup)
            int choice2 = JOptionPane.showConfirmDialog(
                    null,
                    "Are you sure you want to delete your account?",
                    "Bank 42",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.PLAIN_MESSAGE,
                    GUI.icon
            );

            //if user pressed yes, delete account
            if (choice2 == 0)
            {
                
                GUI.MasterTable.deleteUserAccount(GUI.currentUserAccount.getUserName());
                
                //reset static gui variables
                GUI.currentBankAccount = null;
                GUI.currentUserAccount = null;
                
                //tell database about change (export data)
                GUI.dataout.exportDB(GUI.MasterTable);

                //return to login screen
                CardLayout layout = (CardLayout) (MainPanel.getLayout());
                layout.show(MainPanel, "Login");
            }
        }
    }//GEN-LAST:event_DeleteAccountButtonMouseClicked

    //method for setting panel backgrounds after one is changed upon mouseentered
    private void setMouseExitColors()
    {
        Color newColor = new Color(153, 255, 153);
        FirstNameLabelPanel.setBackground(newColor);
        LastNameLabelPanel.setBackground(newColor);
        UsernameLabelPanel.setBackground(newColor);
        EmailLabelPanel.setBackground(newColor);
        PhoneNumberLabelPanel.setBackground(newColor);
        PasswordLabelPanel.setBackground(newColor);
        LastNameEditLabelPanel.setBackground(newColor);
        FirstNameEditLabelPanel.setBackground(newColor);
        PhoneNumberEditLabelPanel.setBackground(newColor);
        UsernameEditLabelPanel.setBackground(newColor);
        EmailEditLabelPanel.setBackground(newColor);
        PasswordEditLabelPanel.setBackground(newColor);
        UserLastNamePanel.setBackground(newColor);
        UserFirstNamePanel.setBackground(newColor);
        UserUsernamePanel.setBackground(newColor);
        UserEmailPanel.setBackground(newColor);
        UserPhoneNumberPanel.setBackground(newColor);
        UserPasswordPanel.setBackground(newColor);
    }

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void FirstNameLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_FirstNameLabelPanelMouseEntered
    {//GEN-HEADEREND:event_FirstNameLabelPanelMouseEntered
        FirstNameLabelPanel.setBackground(new Color(255, 255, 255));
        LastNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserLastNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_FirstNameLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void FirstNameLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_FirstNameLabelPanelMouseExited
    {//GEN-HEADEREND:event_FirstNameLabelPanelMouseExited
        setMouseExitColors();
        EditLabel.setFont(thefont);
    }//GEN-LAST:event_FirstNameLabelPanelMouseExited

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EditLabelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabelMouseExited
    {//GEN-HEADEREND:event_EditLabelMouseExited
        setMouseExitColors();
        EditLabel.setFont(thefont);
    }//GEN-LAST:event_EditLabelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EditLabelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabelMouseEntered
    {//GEN-HEADEREND:event_EditLabelMouseEntered
        FirstNameLabelPanel.setBackground(new Color(255, 255, 255));
        LastNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserLastNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EditLabelMouseEntered

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EditLabel1MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel1MouseEntered
    {//GEN-HEADEREND:event_EditLabel1MouseEntered
        LastNameLabelPanel.setBackground(new Color(255, 255, 255));
        FirstNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserFirstNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel1.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EditLabel1MouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EditLabel1MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel1MouseExited
    {//GEN-HEADEREND:event_EditLabel1MouseExited
        setMouseExitColors();
        EditLabel1.setFont(thefont);
    }//GEN-LAST:event_EditLabel1MouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EditLabel2MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel2MouseEntered
    {//GEN-HEADEREND:event_EditLabel2MouseEntered
        UsernameLabelPanel.setBackground(new Color(255, 255, 255));
        UsernameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserUsernamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel2.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EditLabel2MouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EditLabel2MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel2MouseExited
    {//GEN-HEADEREND:event_EditLabel2MouseExited
        setMouseExitColors();
        EditLabel2.setFont(thefont);
    }//GEN-LAST:event_EditLabel2MouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EditLabel3MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel3MouseEntered
    {//GEN-HEADEREND:event_EditLabel3MouseEntered
        EmailLabelPanel.setBackground(new Color(255, 255, 255));
        EmailEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserEmailPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel3.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EditLabel3MouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EditLabel3MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel3MouseExited
    {//GEN-HEADEREND:event_EditLabel3MouseExited
        setMouseExitColors();
        EditLabel3.setFont(thefont);
    }//GEN-LAST:event_EditLabel3MouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EditLabel4MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel4MouseEntered
    {//GEN-HEADEREND:event_EditLabel4MouseEntered
        PhoneNumberLabelPanel.setBackground(new Color(255, 255, 255));
        PhoneNumberEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPhoneNumberPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel4.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EditLabel4MouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EditLabel4MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel4MouseExited
    {//GEN-HEADEREND:event_EditLabel4MouseExited
        setMouseExitColors();
        EditLabel4.setFont(thefont);
    }//GEN-LAST:event_EditLabel4MouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EditLabel5MouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel5MouseEntered
    {//GEN-HEADEREND:event_EditLabel5MouseEntered
        PasswordLabelPanel.setBackground(new Color(255, 255, 255));
        PasswordEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPasswordPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel5.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EditLabel5MouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EditLabel5MouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel5MouseExited
    {//GEN-HEADEREND:event_EditLabel5MouseExited
        setMouseExitColors();
        EditLabel5.setFont(thefont);
    }//GEN-LAST:event_EditLabel5MouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void LastNameEditLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LastNameEditLabelPanelMouseEntered
    {//GEN-HEADEREND:event_LastNameEditLabelPanelMouseEntered
        FirstNameLabelPanel.setBackground(new Color(255, 255, 255));
        LastNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserLastNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_LastNameEditLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void LastNameEditLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LastNameEditLabelPanelMouseExited
    {//GEN-HEADEREND:event_LastNameEditLabelPanelMouseExited
        setMouseExitColors();
        EditLabel.setFont(thefont);
    }//GEN-LAST:event_LastNameEditLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void LastNameLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LastNameLabelPanelMouseEntered
    {//GEN-HEADEREND:event_LastNameLabelPanelMouseEntered
        LastNameLabelPanel.setBackground(new Color(255, 255, 255));
        FirstNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserFirstNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel1.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_LastNameLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void LastNameLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LastNameLabelPanelMouseExited
    {//GEN-HEADEREND:event_LastNameLabelPanelMouseExited
        setMouseExitColors();
        EditLabel1.setFont(thefont);
    }//GEN-LAST:event_LastNameLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void FirstNameEditLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_FirstNameEditLabelPanelMouseEntered
    {//GEN-HEADEREND:event_FirstNameEditLabelPanelMouseEntered
        LastNameLabelPanel.setBackground(new Color(255, 255, 255));
        FirstNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserFirstNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel1.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_FirstNameEditLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void FirstNameEditLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_FirstNameEditLabelPanelMouseExited
    {//GEN-HEADEREND:event_FirstNameEditLabelPanelMouseExited
        setMouseExitColors();
        EditLabel1.setFont(thefont);
    }//GEN-LAST:event_FirstNameEditLabelPanelMouseExited

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void FirstNameLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_FirstNameLabelPanelMouseClicked
    {//GEN-HEADEREND:event_FirstNameLabelPanelMouseClicked
        //popup which records response as an object
        Object response = JOptionPane.showInputDialog(null, "Enter your new last name:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        //convert response to string
        String response_S = response.toString();
        response_S = response_S.trim();

        //if response is valid
        if ((response_S.length() > 0) && CreateAccountPanel.validateLastName(response_S))
        {
            //update backend
            GUI.currentUserAccount.setLastName(response_S);
            
            //update database
            GUI.dataout.exportDB(GUI.MasterTable);
            
            //set seuccess message
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            
            //update this panels fields
            update();
        }
        else
        {
            //if response is invalid, set error message
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your last name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_FirstNameLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void LastNameEditLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LastNameEditLabelPanelMouseClicked
    {//GEN-HEADEREND:event_LastNameEditLabelPanelMouseClicked

        Object response = JOptionPane.showInputDialog(null, "Enter your new last name:", "Bank 42", 1, GUI.icon, null, null);
        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateLastName(response_S))
        {
            GUI.currentUserAccount.setLastName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your last name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_LastNameEditLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EditLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabelMouseClicked
    {//GEN-HEADEREND:event_EditLabelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new last name:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateLastName(response_S))
        {
            GUI.currentUserAccount.setLastName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your last name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_EditLabelMouseClicked

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void PhoneNumberLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PhoneNumberLabelPanelMouseEntered
    {//GEN-HEADEREND:event_PhoneNumberLabelPanelMouseEntered
        PhoneNumberLabelPanel.setBackground(new Color(255, 255, 255));
        PhoneNumberEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPhoneNumberPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel4.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_PhoneNumberLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void PhoneNumberLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PhoneNumberLabelPanelMouseExited
    {//GEN-HEADEREND:event_PhoneNumberLabelPanelMouseExited
        setMouseExitColors();
        EditLabel4.setFont(thefont);
    }//GEN-LAST:event_PhoneNumberLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void PhoneNumberEditLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PhoneNumberEditLabelPanelMouseEntered
    {//GEN-HEADEREND:event_PhoneNumberEditLabelPanelMouseEntered
        PhoneNumberLabelPanel.setBackground(new Color(255, 255, 255));
        PhoneNumberEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPhoneNumberPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel4.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_PhoneNumberEditLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void PhoneNumberEditLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PhoneNumberEditLabelPanelMouseExited
    {//GEN-HEADEREND:event_PhoneNumberEditLabelPanelMouseExited
        setMouseExitColors();
        EditLabel4.setFont(thefont);
    }//GEN-LAST:event_PhoneNumberEditLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UsernameLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UsernameLabelPanelMouseEntered
    {//GEN-HEADEREND:event_UsernameLabelPanelMouseEntered
        UsernameLabelPanel.setBackground(new Color(255, 255, 255));
        UsernameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserUsernamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel2.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UsernameLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UsernameLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UsernameLabelPanelMouseExited
    {//GEN-HEADEREND:event_UsernameLabelPanelMouseExited
        setMouseExitColors();
        EditLabel2.setFont(thefont);
    }//GEN-LAST:event_UsernameLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UsernameEditLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UsernameEditLabelPanelMouseEntered
    {//GEN-HEADEREND:event_UsernameEditLabelPanelMouseEntered
        UsernameLabelPanel.setBackground(new Color(255, 255, 255));
        UsernameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserUsernamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel2.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UsernameEditLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UsernameEditLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UsernameEditLabelPanelMouseExited
    {//GEN-HEADEREND:event_UsernameEditLabelPanelMouseExited
        setMouseExitColors();
        EditLabel2.setFont(thefont);
    }//GEN-LAST:event_UsernameEditLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EmailLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EmailLabelPanelMouseEntered
    {//GEN-HEADEREND:event_EmailLabelPanelMouseEntered
        EmailLabelPanel.setBackground(new Color(255, 255, 255));
        EmailEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserEmailPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel3.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EmailLabelPanelMouseEntered

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void EmailEditLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EmailEditLabelPanelMouseEntered
    {//GEN-HEADEREND:event_EmailEditLabelPanelMouseEntered
        EmailLabelPanel.setBackground(new Color(255, 255, 255));
        EmailEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserEmailPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel3.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_EmailEditLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EmailLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EmailLabelPanelMouseExited
    {//GEN-HEADEREND:event_EmailLabelPanelMouseExited
        setMouseExitColors();
        EditLabel3.setFont(thefont);
    }//GEN-LAST:event_EmailLabelPanelMouseExited

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void EmailEditLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EmailEditLabelPanelMouseExited
    {//GEN-HEADEREND:event_EmailEditLabelPanelMouseExited
        setMouseExitColors();
        EditLabel3.setFont(thefont);
    }//GEN-LAST:event_EmailEditLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void PasswordLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PasswordLabelPanelMouseEntered
    {//GEN-HEADEREND:event_PasswordLabelPanelMouseEntered
        PasswordLabelPanel.setBackground(new Color(255, 255, 255));
        PasswordEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPasswordPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel5.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_PasswordLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void PasswordLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PasswordLabelPanelMouseExited
    {//GEN-HEADEREND:event_PasswordLabelPanelMouseExited
        setMouseExitColors();
        EditLabel5.setFont(thefont);
    }//GEN-LAST:event_PasswordLabelPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UserLastNamePanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserLastNamePanelMouseEntered
    {//GEN-HEADEREND:event_UserLastNamePanelMouseEntered
        FirstNameLabelPanel.setBackground(new Color(255, 255, 255));
        LastNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserLastNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UserLastNamePanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UserLastNamePanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserLastNamePanelMouseExited
    {//GEN-HEADEREND:event_UserLastNamePanelMouseExited
        setMouseExitColors();
        EditLabel.setFont(thefont);
    }//GEN-LAST:event_UserLastNamePanelMouseExited

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UserLastNamePanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserLastNamePanelMouseClicked
    {//GEN-HEADEREND:event_UserLastNamePanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new last name:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateLastName(response_S))
        {
            GUI.currentUserAccount.setLastName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your last name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_UserLastNamePanelMouseClicked

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UserFirstNamePanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserFirstNamePanelMouseEntered
    {//GEN-HEADEREND:event_UserFirstNamePanelMouseEntered
        LastNameLabelPanel.setBackground(new Color(255, 255, 255));
        FirstNameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserFirstNamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel1.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UserFirstNamePanelMouseEntered

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UserUsernamePanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserUsernamePanelMouseEntered
    {//GEN-HEADEREND:event_UserUsernamePanelMouseEntered
        UsernameLabelPanel.setBackground(new Color(255, 255, 255));
        UsernameEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserUsernamePanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel2.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UserUsernamePanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UserUsernamePanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserUsernamePanelMouseExited
    {//GEN-HEADEREND:event_UserUsernamePanelMouseExited
        setMouseExitColors();
        EditLabel2.setFont(thefont);
    }//GEN-LAST:event_UserUsernamePanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UserPasswordPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserPasswordPanelMouseEntered
    {//GEN-HEADEREND:event_UserPasswordPanelMouseEntered
        PasswordLabelPanel.setBackground(new Color(255, 255, 255));
        PasswordEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPasswordPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel5.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UserPasswordPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UserPasswordPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserPasswordPanelMouseExited
    {//GEN-HEADEREND:event_UserPasswordPanelMouseExited
        setMouseExitColors();
        EditLabel5.setFont(thefont);
    }//GEN-LAST:event_UserPasswordPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UserPhoneNumberPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserPhoneNumberPanelMouseEntered
    {//GEN-HEADEREND:event_UserPhoneNumberPanelMouseEntered

        PhoneNumberLabelPanel.setBackground(new Color(255, 255, 255));
        PhoneNumberEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPhoneNumberPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel4.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UserPhoneNumberPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UserPhoneNumberPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserPhoneNumberPanelMouseExited
    {//GEN-HEADEREND:event_UserPhoneNumberPanelMouseExited
        setMouseExitColors();
        EditLabel4.setFont(thefont);
    }//GEN-LAST:event_UserPhoneNumberPanelMouseExited

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void UserEmailPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserEmailPanelMouseEntered
    {//GEN-HEADEREND:event_UserEmailPanelMouseEntered
        EmailLabelPanel.setBackground(new Color(255, 255, 255));
        EmailEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserEmailPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel3.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_UserEmailPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UserEmailPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserEmailPanelMouseExited
    {//GEN-HEADEREND:event_UserEmailPanelMouseExited
        setMouseExitColors();
        EditLabel3.setFont(thefont);
    }//GEN-LAST:event_UserEmailPanelMouseExited

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void UserFirstNamePanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserFirstNamePanelMouseExited
    {//GEN-HEADEREND:event_UserFirstNamePanelMouseExited
        setMouseExitColors();
        EditLabel1.setFont(thefont);
    }//GEN-LAST:event_UserFirstNamePanelMouseExited

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void LastNameLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_LastNameLabelPanelMouseClicked
    {//GEN-HEADEREND:event_LastNameLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new first:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateFirstName(response_S))
        {
            GUI.currentUserAccount.setFirstName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your first name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_LastNameLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UserFirstNamePanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserFirstNamePanelMouseClicked
    {//GEN-HEADEREND:event_UserFirstNamePanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new first:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateFirstName(response_S))
        {
            GUI.currentUserAccount.setFirstName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your first name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_UserFirstNamePanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EditLabel1MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel1MouseClicked
    {//GEN-HEADEREND:event_EditLabel1MouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new first:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateFirstName(response_S))
        {
            GUI.currentUserAccount.setFirstName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your first name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_EditLabel1MouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void FirstNameEditLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_FirstNameEditLabelPanelMouseClicked
    {//GEN-HEADEREND:event_FirstNameEditLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new first name:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && CreateAccountPanel.validateFirstName(response_S))
        {
            GUI.currentUserAccount.setFirstName(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your first name can only contain alphabet values and hyphens.");
        }
    }//GEN-LAST:event_FirstNameEditLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UsernameLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UsernameLabelPanelMouseClicked
    {//GEN-HEADEREND:event_UsernameLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new username:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validate(response_S)))
        {
            if (GUI.MasterTable.findUserAccount(response_S) == null)
            {
                if ((response_S.length() < 3) || (response_S.length() > 20))
                {
                    errorMessage.setForeground(Color.red);
                    errorMessage.setText("Your username must be between 3 and 20 characters.");
                }
                else
                {
                    UserAccount temp = new UserAccount(GUI.currentUserAccount);
                    temp.setUserName(response_S);
                    GUI.MasterTable.deleteUserAccount(GUI.currentUserAccount.getUserName());
                    GUI.currentUserAccount = GUI.MasterTable.insertUserAccountCopy(temp);
                    GUI.dataout.exportDB(GUI.MasterTable);
                    errorMessage.setText("Success");
                    errorMessage.setForeground(Color.green);
                    update();
                }
            }
            else
            {
                errorMessage.setText("The username you have entered is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your username can only contain alphanumeric values, underscore, and dashes.");
        }
    }//GEN-LAST:event_UsernameLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UserUsernamePanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserUsernamePanelMouseClicked
    {//GEN-HEADEREND:event_UserUsernamePanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new username:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validate(response_S)))
        {
            if (GUI.MasterTable.findUserAccount(response_S) == null)
            {
                if ((response_S.length() < 3) || (response_S.length() > 20))
                {
                    errorMessage.setForeground(Color.red);
                    errorMessage.setText("Your username must be between 3 and 20 characters.");
                }
                else
                {
                    UserAccount temp = new UserAccount(GUI.currentUserAccount);
                    temp.setUserName(response_S);
                    GUI.MasterTable.deleteUserAccount(GUI.currentUserAccount.getUserName());
                    GUI.currentUserAccount = GUI.MasterTable.insertUserAccountCopy(temp);
                    // //System.out.println(GUI.currentUserAccount.getUserName());
                    GUI.dataout.exportDB(GUI.MasterTable);
                    errorMessage.setText("Success");
                    errorMessage.setForeground(Color.green);
                    update();
                }
            }
            else
            {
                errorMessage.setText("The username you have entered is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your username can only contain alphanumeric values, underscore, and dashes.");
        }
    }//GEN-LAST:event_UserUsernamePanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EditLabel2MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel2MouseClicked
    {//GEN-HEADEREND:event_EditLabel2MouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new username:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validate(response_S)))
        {
            if (GUI.MasterTable.findUserAccount(response_S) == null)
            {
                if ((response_S.length() < 3) || (response_S.length() > 20))
                {
                    errorMessage.setForeground(Color.red);
                    errorMessage.setText("Your username must be between 3 and 20 characters.");
                }
                else
                {
                    UserAccount temp = new UserAccount(GUI.currentUserAccount);
                    temp.setUserName(response_S);
                    GUI.MasterTable.deleteUserAccount(GUI.currentUserAccount.getUserName());
                    GUI.currentUserAccount = GUI.MasterTable.insertUserAccountCopy(temp);
                    GUI.dataout.exportDB(GUI.MasterTable);
                    errorMessage.setText("Success");
                    errorMessage.setForeground(Color.green);
                    update();
                }
            }
            else
            {
                errorMessage.setText("The username you have entered is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your username can only contain alphanumeric values, underscore, and dashes.");
        }
    }//GEN-LAST:event_EditLabel2MouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UsernameEditLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UsernameEditLabelPanelMouseClicked
    {//GEN-HEADEREND:event_UsernameEditLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new username:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validate(response_S)))
        {
            if (GUI.MasterTable.findUserAccount(response_S) == null)
            {
                if ((response_S.length() < 3) || (response_S.length() > 20))
                {
                    errorMessage.setForeground(Color.red);
                    errorMessage.setText("Your username must be between 3 and 20 characters.");
                }
                else
                {
                    UserAccount temp = new UserAccount(GUI.currentUserAccount);
                    temp.setUserName(response_S);
                    GUI.MasterTable.deleteUserAccount(GUI.currentUserAccount.getUserName());
                    GUI.currentUserAccount = GUI.MasterTable.insertUserAccountCopy(temp);
                    ////System.out.println(GUI.currentUserAccount.getUserName());
                    GUI.dataout.exportDB(GUI.MasterTable);
                    errorMessage.setText("Success");
                    errorMessage.setForeground(Color.green);
                    update();
                }
            }
            else
            {
                errorMessage.setText("The username you have entered is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your username can only contain alphanumeric values, underscore, and dashes.");
        }
    }//GEN-LAST:event_UsernameEditLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EmailLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EmailLabelPanelMouseClicked
    {//GEN-HEADEREND:event_EmailLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new email:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.isValidEmailAddress(response_S)))
        {
            if (GUI.MasterTable.findUserAccountEmail(response_S) == null)
            {
                GUI.currentUserAccount.setEmail(response_S);
                GUI.dataout.exportDB(GUI.MasterTable);
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
                update();
            }
            else
            {
                errorMessage.setText("The email address is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your email was entered incorrectly. (e.g. name@example.com)");
        }
    }//GEN-LAST:event_EmailLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UserEmailPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserEmailPanelMouseClicked
    {//GEN-HEADEREND:event_UserEmailPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new email:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.isValidEmailAddress(response_S)))
        {
            if (GUI.MasterTable.findUserAccountEmail(response_S) == null)
            {
                GUI.currentUserAccount.setEmail(response_S);
                GUI.dataout.exportDB(GUI.MasterTable);
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
                update();
            }
            else
            {
                errorMessage.setText("The email address is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your email was entered incorrectly. (e.g. name@example.com)");
        }
    }//GEN-LAST:event_UserEmailPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EditLabel3MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel3MouseClicked
    {//GEN-HEADEREND:event_EditLabel3MouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new email:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.isValidEmailAddress(response_S)))
        {
            if (GUI.MasterTable.findUserAccountEmail(response_S) == null)
            {
                GUI.currentUserAccount.setEmail(response_S);
                GUI.dataout.exportDB(GUI.MasterTable);
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
                update();
            }
            else
            {
                errorMessage.setText("The email address is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your email was entered incorrectly. (e.g. name@example.com)");
        }
    }//GEN-LAST:event_EditLabel3MouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EmailEditLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EmailEditLabelPanelMouseClicked
    {//GEN-HEADEREND:event_EmailEditLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new email:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.isValidEmailAddress(response_S)))
        {
            if (GUI.MasterTable.findUserAccountEmail(response_S) == null)
            {
                GUI.currentUserAccount.setEmail(response_S);
                GUI.dataout.exportDB(GUI.MasterTable);
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
                update();
            }
            else
            {
                errorMessage.setText("The email address is already in use.");
                errorMessage.setForeground(Color.red);
            }
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your email was entered incorrectly. (e.g. name@example.com)");
        }
    }//GEN-LAST:event_EmailEditLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void PhoneNumberLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PhoneNumberLabelPanelMouseClicked
    {//GEN-HEADEREND:event_PhoneNumberLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new phone number:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validatePhoneNumber(response_S)))
        {
            GUI.currentUserAccount.setPhone(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your phone number was entered incorrectly. (e.g. 6507879999)");
        }
    }//GEN-LAST:event_PhoneNumberLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UserPhoneNumberPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserPhoneNumberPanelMouseClicked
    {//GEN-HEADEREND:event_UserPhoneNumberPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new phone number:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validatePhoneNumber(response_S)))
        {
            GUI.currentUserAccount.setPhone(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your phone number was entered incorrectly. (e.g. 6507879999)");
        }
    }//GEN-LAST:event_UserPhoneNumberPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EditLabel4MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel4MouseClicked
    {//GEN-HEADEREND:event_EditLabel4MouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new phone number:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validatePhoneNumber(response_S)))
        {
            GUI.currentUserAccount.setPhone(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your phone number was entered incorrectly. (e.g. 6507879999)");
        }
    }//GEN-LAST:event_EditLabel4MouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void PhoneNumberEditLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PhoneNumberEditLabelPanelMouseClicked
    {//GEN-HEADEREND:event_PhoneNumberEditLabelPanelMouseClicked
        Object response = JOptionPane.showInputDialog(null, "Enter your new phone number:", "Bank 42", 1, GUI.icon, null, null);

        if (response == null)
            return;

        String response_S = response.toString();
        response_S = response_S.trim();
        if ((response_S.length() > 0) && (CreateAccountPanel.validatePhoneNumber(response_S)))
        {
            GUI.currentUserAccount.setPhone(response_S);
            GUI.dataout.exportDB(GUI.MasterTable);
            errorMessage.setText("Success");
            errorMessage.setForeground(Color.green);
            update();
        }
        else
        {
            errorMessage.setForeground(Color.red);
            errorMessage.setText("Your phone number was entered incorrectly. (e.g. 6507879999)");
        }
    }//GEN-LAST:event_PhoneNumberEditLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void EditLabel5MouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_EditLabel5MouseClicked
    {//GEN-HEADEREND:event_EditLabel5MouseClicked
        JPanel passpanel = mainGUI.getChangePasswordPanel().GetPanel();
        int choice = JOptionPane.showConfirmDialog(
                null,
                passpanel,
                "Bank 42",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE
        );

        if (choice == 0)
        {
            if (mainGUI.getChangePasswordPanel().SetPassword())
            {
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
            }
            else
            {
                errorMessage.setForeground(Color.red);
                errorMessage.setText("The password must have 6-20 characters, at least one uppercase letter and one lowercase letter");
            }
        }
    }//GEN-LAST:event_EditLabel5MouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void PasswordLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PasswordLabelPanelMouseClicked
    {//GEN-HEADEREND:event_PasswordLabelPanelMouseClicked
        JPanel passpanel = mainGUI.getChangePasswordPanel().GetPanel();
        int choice = JOptionPane.showConfirmDialog(
                null,
                passpanel,
                "Bank 42",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                GUI.icon
        );

        if (choice == 0)
        {
            if (mainGUI.getChangePasswordPanel().SetPassword())
            {
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
            }
            else
            {
                errorMessage.setText("The password must have 6-20 characters, at least one uppercase letter and one lowercase letter");
                errorMessage.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_PasswordLabelPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void UserPasswordPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_UserPasswordPanelMouseClicked
    {//GEN-HEADEREND:event_UserPasswordPanelMouseClicked
        JPanel passpanel = mainGUI.getChangePasswordPanel().GetPanel();
        int choice = JOptionPane.showConfirmDialog(
                null,
                passpanel,
                "Bank 42",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                GUI.icon
        );

        if (choice == 0)
        {
            if (mainGUI.getChangePasswordPanel().SetPassword())
            {
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
                GUI.dataout.exportDB(GUI.MasterTable);
            }
            else
            {
                errorMessage.setText("The password must have 6-20 characters, at least one uppercase letter and one lowercase letter");
                errorMessage.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_UserPasswordPanelMouseClicked

    //shows input popup asking for new field, validates response,updates corresponding labels and database, gives success message.
    private void PasswordEditLabelPanelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PasswordEditLabelPanelMouseClicked
    {//GEN-HEADEREND:event_PasswordEditLabelPanelMouseClicked
        JPanel passpanel = mainGUI.getChangePasswordPanel().GetPanel();
        int choice = JOptionPane.showConfirmDialog(
                null,
                passpanel,
                "Bank 42",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                GUI.icon
        );
        if (choice == 0)
        {
            if (mainGUI.getChangePasswordPanel().SetPassword())
            {
                errorMessage.setText("Success");
                errorMessage.setForeground(Color.green);
                GUI.dataout.exportDB(GUI.MasterTable);
            }
            else
            {
                errorMessage.setText("The password must have 6-20 characters, at least one uppercase letter and one lowercase letter");
                errorMessage.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_PasswordEditLabelPanelMouseClicked

    //sets appropriate label backgrounds to white to signal clickable upon mouse enter, underlines edit label
    private void PasswordEditLabelPanelMouseEntered(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PasswordEditLabelPanelMouseEntered
    {//GEN-HEADEREND:event_PasswordEditLabelPanelMouseEntered
        PasswordLabelPanel.setBackground(new Color(255, 255, 255));
        PasswordEditLabelPanel.setBackground(new Color(255, 255, 255));
        UserPasswordPanel.setBackground(new Color(255, 255, 255));
        thefont = EditLabel.getFont();
        Font font = EditLabel.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        EditLabel5.setFont(font.deriveFont(attributes));
    }//GEN-LAST:event_PasswordEditLabelPanelMouseEntered

    //changes its edit labels font to not underlined. call setmouse exit colors to reset selection
    private void PasswordEditLabelPanelMouseExited(java.awt.event.MouseEvent evt)//GEN-FIRST:event_PasswordEditLabelPanelMouseExited
    {//GEN-HEADEREND:event_PasswordEditLabelPanelMouseExited
        setMouseExitColors();
        EditLabel5.setFont(thefont);
    }//GEN-LAST:event_PasswordEditLabelPanelMouseExited

    //resets settings panel, updates and shows home panel
    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_HomeButtonActionPerformed
    {//GEN-HEADEREND:event_HomeButtonActionPerformed
        //update acclist(home) panel
        mainGUI.getAccList().update();
        
        //reset error message
        errorMessage.setForeground(new Color(204, 255, 204));
        errorMessage.setText("Click Below to Edit Settings");
        
        //show acclist panel
        CardLayout layout = (CardLayout) (MainPanel.getLayout());
        layout.show(MainPanel, "AccList");
    }//GEN-LAST:event_HomeButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton DeleteAccountButton;
    private javax.swing.JLabel EditLabel;
    private javax.swing.JLabel EditLabel1;
    private javax.swing.JLabel EditLabel2;
    private javax.swing.JLabel EditLabel3;
    private javax.swing.JLabel EditLabel4;
    private javax.swing.JLabel EditLabel5;
    private javax.swing.JLabel Email;
    private javax.swing.JPanel EmailEditLabelPanel;
    private javax.swing.JPanel EmailLabelPanel;
    private javax.swing.JLabel FirstName;
    private javax.swing.JPanel FirstNameEditLabelPanel;
    private javax.swing.JPanel FirstNameLabelPanel;
    private javax.swing.JButton HomeButton;
    private javax.swing.JLabel LastName;
    private javax.swing.JPanel LastNameEditLabelPanel;
    private javax.swing.JPanel LastNameLabelPanel;
    private javax.swing.JLabel Password;
    private javax.swing.JPanel PasswordEditLabelPanel;
    private javax.swing.JPanel PasswordLabelPanel;
    private javax.swing.JLabel PhoneNumber;
    private javax.swing.JPanel PhoneNumberEditLabelPanel;
    private javax.swing.JPanel PhoneNumberLabelPanel;
    private javax.swing.JPanel SettingsMainPanel;
    private javax.swing.JLabel SettingsTitle;
    private javax.swing.JLabel UserEmail;
    private javax.swing.JPanel UserEmailPanel;
    private javax.swing.JLabel UserFirstName;
    private javax.swing.JPanel UserFirstNamePanel;
    private javax.swing.JLabel UserLastName;
    private javax.swing.JPanel UserLastNamePanel;
    private javax.swing.JLabel UserPassword;
    private javax.swing.JPanel UserPasswordPanel;
    private javax.swing.JLabel UserPhoneNumber;
    private javax.swing.JPanel UserPhoneNumberPanel;
    private javax.swing.JLabel UserUsername;
    private javax.swing.JPanel UserUsernamePanel;
    private javax.swing.JLabel Username;
    private javax.swing.JPanel UsernameEditLabelPanel;
    private javax.swing.JPanel UsernameLabelPanel;
    private javax.swing.JLabel errorMessage;
    // End of variables declaration//GEN-END:variables
}
