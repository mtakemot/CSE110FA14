/**
 * **************************************************************************
 *
 * Aryaman Sharda CSE 110, Fall 2014 Last Updated: December 6, 2014
 *
 * Team 42
 *
 * File Name: CreateAccountPanel.java Description: This file contains the 
 * GUI and the functionality that allows a user to create an account and gain
 * access to the program. 
 * **************************************************************************
 */


package PresentationLayer;

import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class CreateAccountPanel extends javax.swing.JPanel
{

    private JPanel MainPanel;
    private GUI mainGUI;

    /**
     * Creates new form CreateAccount
     */
    public CreateAccountPanel()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        Bank42 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        HeaderPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        password = new javax.swing.JPasswordField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        username = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        confirmPassword = new javax.swing.JPasswordField();
        createUserAccount = new javax.swing.JButton();
        spacinglabellol = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        errorMessage = new javax.swing.JLabel();
        fillerlabellol = new javax.swing.JLabel();
        spacinglabellol1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        FirstNameError = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        LastNameError = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        UsernameError = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        PasswordError = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        ConfirmPasswordError = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        EmailError = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        PhoneError = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        FirstNameLabel = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        LastNameLabel = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        PasswordLabel = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        ConfirmPasswordLabel = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        emailLabel = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        PhoneLabel = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new java.awt.GridBagLayout());

        Bank42.setFont(new java.awt.Font("DejaVu Sans", 1, 36)); // NOI18N
        Bank42.setForeground(new java.awt.Color(204, 204, 255));
        Bank42.setText("Create A User Account With Bank 42");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(Bank42, gridBagConstraints);

        jPanel2.setOpaque(false);
        jPanel2.setLayout(new java.awt.GridBagLayout());

        HeaderPanel.setBackground(new java.awt.Color(255, 255, 255));
        HeaderPanel.setOpaque(false);
        HeaderPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 65, 0);
        jPanel2.add(HeaderPanel, gridBagConstraints);

        jPanel1.setOpaque(false);
        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 3, 0};
        jPanel1Layout.rowHeights = new int[] {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
        jPanel1.setLayout(jPanel1Layout);

        password.setBackground(new Color(255,255,255,190));
        password.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        password.setMaximumSize(new java.awt.Dimension(6, 21));
        password.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                passwordFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(password, gridBagConstraints);

        email.setBackground(new Color(255,255,255,190));
        email.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        email.setMaximumSize(new java.awt.Dimension(6, 21));
        email.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                emailFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(email, gridBagConstraints);

        phone.setBackground(new Color(255,255,255,190));
        phone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        phone.setMaximumSize(new java.awt.Dimension(6, 21));
        phone.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                phoneFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 32;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(phone, gridBagConstraints);

        lastName.setBackground(new Color(255,255,255,190));
        lastName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lastName.setMaximumSize(new java.awt.Dimension(6, 21));
        lastName.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                lastNameFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lastName, gridBagConstraints);

        username.setBackground(new Color(255,255,255,190));
        username.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        username.setMaximumSize(new java.awt.Dimension(6, 21));
        username.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                usernameFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(username, gridBagConstraints);

        firstName.setBackground(new Color(255,255,255,190));
        firstName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        firstName.setMaximumSize(new java.awt.Dimension(6, 21));
        firstName.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                firstNameFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(firstName, gridBagConstraints);

        confirmPassword.setBackground(new Color(255,255,255,190));
        confirmPassword.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        confirmPassword.setMaximumSize(new java.awt.Dimension(6, 21));
        confirmPassword.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                confirmPasswordFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(confirmPassword, gridBagConstraints);

        createUserAccount.setBackground(new java.awt.Color(255, 255, 255));
        createUserAccount.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        createUserAccount.setForeground(new java.awt.Color(14, 118, 188));
        createUserAccount.setText("Create User Account");
        createUserAccount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                createUserAccountActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 36;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(createUserAccount, gridBagConstraints);

        spacinglabellol.setText(" ");
        spacinglabellol.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 34;
        jPanel1.add(spacinglabellol, gridBagConstraints);

        BackButton.setBackground(new java.awt.Color(255, 255, 255));
        BackButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BackButton.setForeground(new java.awt.Color(14, 118, 188));
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BackButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 40;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(BackButton, gridBagConstraints);

        errorMessage.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        errorMessage.setForeground(new java.awt.Color(255, 102, 102));
        errorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        errorMessage.setText("                    Please fill in the fields below to create an account.                    ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        jPanel1.add(errorMessage, gridBagConstraints);

        fillerlabellol.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 38;
        jPanel1.add(fillerlabellol, gridBagConstraints);

        spacinglabellol1.setText(" ");
        spacinglabellol1.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 34;
        jPanel1.add(spacinglabellol1, gridBagConstraints);

        jLabel1.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel8.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        jPanel1.add(jLabel8, gridBagConstraints);

        jLabel9.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        jPanel1.add(jLabel9, gridBagConstraints);

        jPanel3.setBackground(new Color(255,102,102));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        FirstNameError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(FirstNameError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setBackground(new Color(255,102,102));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        LastNameError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(LastNameError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setBackground(new Color(255,102,102));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        UsernameError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(UsernameError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel5, gridBagConstraints);

        jPanel6.setBackground(new Color(255,102,102));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        PasswordError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel6.add(PasswordError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel6, gridBagConstraints);

        jPanel7.setBackground(new Color(255,102,102));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        ConfirmPasswordError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel7.add(ConfirmPasswordError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel7, gridBagConstraints);

        jPanel8.setBackground(new Color(255,102,102));
        jPanel8.setLayout(new java.awt.GridBagLayout());

        EmailError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel8.add(EmailError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel8, gridBagConstraints);

        jPanel9.setBackground(new Color(255,102,102));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        PhoneError.setForeground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel9.add(PhoneError, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanel9, gridBagConstraints);

        jLabel10.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        jPanel1.add(jLabel10, gridBagConstraints);

        jLabel11.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 14;
        jPanel1.add(jLabel11, gridBagConstraints);

        jLabel12.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 18;
        jPanel1.add(jLabel12, gridBagConstraints);

        jLabel16.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 22;
        jPanel1.add(jLabel16, gridBagConstraints);

        jLabel13.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 26;
        jPanel1.add(jLabel13, gridBagConstraints);

        jLabel14.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 30;
        jPanel1.add(jLabel14, gridBagConstraints);

        jPanel10.setBackground(new Color(145,228,253,100));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        FirstNameLabel.setBackground(new Color(255,255,255,190));
        FirstNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FirstNameLabel.setForeground(new java.awt.Color(204, 255, 255));
        FirstNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        FirstNameLabel.setText("First Name:");
        FirstNameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel10.add(FirstNameLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel10, gridBagConstraints);

        jPanel11.setBackground(new Color(145,228,253,100));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        LastNameLabel.setBackground(new Color(255,255,255,190));
        LastNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LastNameLabel.setForeground(new java.awt.Color(204, 255, 255));
        LastNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LastNameLabel.setText("Last Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel11.add(LastNameLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel11, gridBagConstraints);

        jPanel12.setBackground(new Color(145,228,253,100));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel5.setBackground(new Color(255,255,255,190));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Username:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel12.add(jLabel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel12, gridBagConstraints);

        jPanel13.setBackground(new Color(145,228,253,100));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        PasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PasswordLabel.setForeground(new java.awt.Color(204, 255, 255));
        PasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PasswordLabel.setText("Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel13.add(PasswordLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel13, gridBagConstraints);

        jPanel14.setBackground(new Color(145,228,253,100));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        ConfirmPasswordLabel.setBackground(new Color(255,255,255,190));
        ConfirmPasswordLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ConfirmPasswordLabel.setForeground(new java.awt.Color(204, 255, 255));
        ConfirmPasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ConfirmPasswordLabel.setText("Confirm Password:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel14.add(ConfirmPasswordLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel14, gridBagConstraints);

        jPanel15.setBackground(new Color(145,228,253,100));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        emailLabel.setBackground(new Color(255,255,255,190));
        emailLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        emailLabel.setForeground(new java.awt.Color(204, 255, 255));
        emailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailLabel.setText("Email:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel15.add(emailLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 28;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel15, gridBagConstraints);

        jPanel16.setBackground(new Color(145,228,253,100));
        jPanel16.setLayout(new java.awt.GridBagLayout());

        PhoneLabel.setBackground(new Color(255,255,255,190));
        PhoneLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PhoneLabel.setForeground(new java.awt.Color(204, 255, 255));
        PhoneLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PhoneLabel.setText("Phone:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        jPanel16.add(PhoneLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 32;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jPanel16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 65, 0);
        jPanel2.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(jPanel2, gridBagConstraints);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/wallpaper_abstract_wallpapers_00250_wallpapersuggest_com-HD.jpg"))); // NOI18N
        Background.setMaximumSize(new java.awt.Dimension(800, 600));
        Background.setMinimumSize(new java.awt.Dimension(800, 600));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(Background, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    
    /* 
     This constructor takes in MainPanel from GUI.java which gives us access to
     the main panel where all of our GUI elements will eventually be located. */
    
    public CreateAccountPanel(JPanel MainPanel, GUI mainGUI)
    {
        this.mainGUI = mainGUI;
        this.MainPanel = MainPanel;
        initComponents();
    }

    /**
     * This function clears all of the text fields on the screen
     *
     * method: clearfields    
     */
    public void clearfields()
    {
        //Clear out the text in all of the text fields
        phone.setText("");
        email.setText("");
        password.setText("");
        confirmPassword.setText("");
        username.setText("");
        lastName.setText("");
        firstName.setText("");
    }

    /**
     * This function clears all of the error messages on the screen
     *
     * method: clearerrors    
     */
    public void clearerrors()
    {
        //Clear out the text in all of the text fields
        FirstNameError.setText("");
        LastNameError.setText("");
        UsernameError.setText("");
        PasswordError.setText("");
        ConfirmPasswordError.setText("");
        EmailError.setText("");
        PhoneError.setText("");
    }

    /**
     * This function will attempt to create the account if successful 
     * credentials were provided. 
     *      
     * method: createUserAccountActionPerformed
     * @param evt an ActionEvent event object that triggers the execution of 
     * this method
     */
    private void createUserAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserAccountActionPerformed

        //Setup styling for error messages
        errorMessage.setForeground(Color.red);

        //Extract content from the text fields
        String name1 = firstName.getText().trim();
        String name2 = lastName.getText().trim();
        String user = username.getText().trim();
        String input3 = email.getText().trim();
        String phoneNumber = phone.getText().trim();

        /*Password fields are slightly different, so retrieving their contents
          through use of a char[] */
        char[] input1 = password.getPassword();
        char[] input2 = confirmPassword.getPassword();

        //Converts the char[] back to normal text
        String pass1 = new String(input1);
        String pass2 = new String(input2);
        
        //Represents if any errors occured. 
        boolean account_accepted = true;

        //Dismisses all error messages
        clearerrors();

        //If a first name was not provided or invalid, display error message.
        if (!((name1.length() > 0) && (validateFirstName(name1) == true)))
        {
            FirstNameError.setText("Your first name can only contain alphabet values and hyphens.");
            account_accepted = false;
        }
        
        //If a last name was not provided or invalid, display error message.
        if (!((name2.length() > 0) && (validateLastName(name2) == true)))
        {
            LastNameError.setText("Your last name can only contain alphabet values and hyphens.");
            account_accepted = false;
        }
        
        //If a username was not provided or invalid, display error message.
        if ((validate(user) == true))
        {
            if ((user.length() < 3) || (user.length() > 20))
            {
                //Notify user that username is invalid
                UsernameError.setText("Your username must be between 3 and 20 characters.");
                account_accepted = false;
            }
        }
        
        //Indicates a different type of error with the username
        else
        {
            UsernameError.setText("Your username can only contain alphanumeric values, underscore, and dashes.");
            account_accepted = false;
        }

        //If the password is within bounds
        if ((pass1.length() >= 6) && (pass1.length() <= 20))
        {
            //Checks if the password is valid
            if (validatePassword(pass1) == false)
            {
                //Notify user that password is invalid
                PasswordError.setText("Your password must contain at least one lowercase letter and one uppercase letter.");
                account_accepted = false;
            }
            //Indicates password is valid
            else
            {
                PasswordError.setText("");
            }
        }
        
        /* The user is shown an error message that indicates their password
           was out of bounds */
        else
        {
            PasswordError.setText("Your password must be between 6 and 20 characters");
            account_accepted = false;
        }

        //If the passwords don't match, display error message
        if (!(pass1.length() > 0 && pass1.equals(pass2)))
        {
            ConfirmPasswordError.setText("Your password doesn't match confirm password");
            account_accepted = false;
        }
        
        //If an email was not provided or invalid, display error message.
        if (!((input3.length() > 0) && (isValidEmailAddress(input3))))
        {
            EmailError.setText("Your email was entered incorrectly. (e.g. name@example.com)");
            account_accepted = false;
        }
        
        //If a phone number was not provided or invalid, display error message.
        if (!((phoneNumber.length() > 0) && (validatePhoneNumber(phoneNumber))))
        {
            PhoneError.setText("Your phone number was entered incorrectly. (e.g. 0123456789)");
            account_accepted = false;
        }

        //If all tests pass
        if (account_accepted == true)
        {
            //Create and get the currentUserAccount object
            GUI.currentUserAccount = GUI.MasterTable.insertUserAccount(user, input3);
            
            //If the operation was successful, update the value in the object
            if (GUI.currentUserAccount != null)
            {
                GUI.currentUserAccount.setFirstName(name1);
                GUI.currentUserAccount.setLastName(name2);
                GUI.currentUserAccount.setUserName(user);
                GUI.currentUserAccount.setPassword(pass1);
                GUI.currentUserAccount.setEmail(input3);
                GUI.currentUserAccount.setPhone(phoneNumber);
                GUI.dataout.exportDB(GUI.MasterTable);
                                               
                //Notify the user that the operation was successful
                JOptionPane.showMessageDialog(null, "You have successfully created your user account!", "Bank 42",
                        1, GUI.icon);

                // Clear all text fields
                phone.setText("");
                email.setText("");
                confirmPassword.setText("");
                password.setText("");
                username.setText("");
                lastName.setText("");
                firstName.setText("");

                //Grab the layout from the main panel, so views can be changed
                CardLayout layout = (CardLayout) (MainPanel.getLayout());
                //send the layout of MainPanel to new display of JPanel "MainMenu"
                layout.show(MainPanel, "Login");
            }
            
            else
                //Some other oerror occured when creating your account
                JOptionPane.showMessageDialog(null, "ERROR! An account with that username or email already exists.", "ERROR", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_createUserAccountActionPerformed

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: firstNameFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void firstNameFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_firstNameFocusGained
    {//GEN-HEADEREND:event_firstNameFocusGained
        firstName.setText(null);
    }//GEN-LAST:event_firstNameFocusGained

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: lastNameFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void lastNameFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_lastNameFocusGained
    {//GEN-HEADEREND:event_lastNameFocusGained
        lastName.setText(null);
    }//GEN-LAST:event_lastNameFocusGained

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: usernameFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void usernameFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_usernameFocusGained
    {//GEN-HEADEREND:event_usernameFocusGained
        username.setText(null);
    }//GEN-LAST:event_usernameFocusGained

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: confirmPasswordFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void confirmPasswordFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_confirmPasswordFocusGained
    {//GEN-HEADEREND:event_confirmPasswordFocusGained
        confirmPassword.setText(null);
    }//GEN-LAST:event_confirmPasswordFocusGained

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: passwordFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void passwordFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_passwordFocusGained
    {//GEN-HEADEREND:event_passwordFocusGained
        password.setText(null);
    }//GEN-LAST:event_passwordFocusGained

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: emailFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void emailFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_emailFocusGained
    {//GEN-HEADEREND:event_emailFocusGained
        email.setText(null);
    }//GEN-LAST:event_emailFocusGained

    /**
     * This function will reset the specified field when the user
     * clicks on the text box
     *      
     * method: phoneFocusGained
     * @param evt A focus event that triggers the reset of the text field          
     */
    private void phoneFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_phoneFocusGained
    {//GEN-HEADEREND:event_phoneFocusGained
        phone.setText(null);
    }//GEN-LAST:event_phoneFocusGained

    /**
     * This function will present the previous view
     *      
     * method: BackButtonActionPerformed
     * @param evt A action event that prompts the display of the previous view
     */
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BackButtonActionPerformed
    {//GEN-HEADEREND:event_BackButtonActionPerformed
        clearfields();
        clearerrors();
        CardLayout layout = (CardLayout) (MainPanel.getLayout());
        layout.show(MainPanel, "Login");
    }//GEN-LAST:event_BackButtonActionPerformed

    /**
     * Attempts to find if a phone number is valid
     *
     * method: validatePhoneNumber
     * @param phoneNo The phone number to validate
     * @return Returns true if the phone number is valid
     */
    public static boolean validatePhoneNumber(String phoneNo)
    {
        //validate phone numbers of format "1234567890"
        if (phoneNo.matches("\\d{10}"))
            return true;

        //validating phone number with -, . or spaces
        else if (phoneNo.matches("\\d{3}[-\\.\\s]\\d{3}[-\\.\\s]\\d{4}"))
            return true;

        //validating phone number with extension length from 3 to 5
        else if (phoneNo.matches("\\d{3}-\\d{3}-\\d{4}\\s(x|(ext))\\d{3,5}"))
            return true;

        //validating phone number where area code is in braces ()
        else if (phoneNo.matches("\\(\\d{3}\\)-\\d{3}-\\d{4}"))
            return true;

        //return false if nothing matches the input
        else
            return false;
    }

    /**
     * Attempts to find if a email address is valid
     *
     * method: isValidEmailAddress
     * @param email The email to validate
     * @return Returns true if the email is valid
     */
    public static boolean isValidEmailAddress(String email)
    {
        //The pattern to test the email against
        String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
        
        //Checks if the email variable matches the above pattern
        java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
        java.util.regex.Matcher m = p.matcher(email);
        
        //Returns true, if it is within the pattern
        return m.matches();
    }

    /**
     * Attempts to find if a name is valid
     *
     * method: validateFirstName
     * @param firstName The name to validate
     * @return Returns true if the name is valid
     */
    public static boolean validateFirstName(String firstName)
    {
        return firstName.matches("[a-zA-z]+([ '-][a-zA-Z]+)*");
    } // end method validateFirstName

     /**
     * Attempts to find if a name is valid
     *
     * method: validateLastName
     * @param lastName The name to validate
     * @return Returns true if the name is valid
     */
    public static boolean validateLastName(String lastName)
    {
        return lastName.matches("[a-zA-z]+([ '-][a-zA-Z]+)*");
    } 

    /**
     * Attempts to find if an username is valid
     *
     * method: validate
     * @param username The username to validate
     * @return Returns true if the username is valid
     */
    public static boolean validate(final String username)
    {
        //The word teller isn't allowed to be a username
        if (username.equals("teller"))
            return false;
        
        //Check if the username pattern matches the regex pattern defined
        String USERNAME_PATTERN = "^[a-zA-z0-9_-]{3,20}$";
        Pattern pattern = Pattern.compile(USERNAME_PATTERN);
        Matcher matcher = pattern.matcher(username);
        return matcher.matches();
    }

    /**
     * Attempts to find if a password is valid
     *
     * method: validatePassword
     * @param passwd The password to validate
     * @return Returns true if the password is valid
     */
    public static boolean validatePassword(final String passwd)
    {
        String pattern = ".*(?=.*[a-z])(?=.*[A-Z]).*";
        return passwd.matches(pattern);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel Background;
    private javax.swing.JLabel Bank42;
    private javax.swing.JLabel ConfirmPasswordError;
    private javax.swing.JLabel ConfirmPasswordLabel;
    private javax.swing.JLabel EmailError;
    private javax.swing.JLabel FirstNameError;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JPanel HeaderPanel;
    private javax.swing.JLabel LastNameError;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JLabel PasswordError;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JLabel PhoneError;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JLabel UsernameError;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JButton createUserAccount;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel fillerlabellol;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField lastName;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phone;
    private javax.swing.JLabel spacinglabellol;
    private javax.swing.JLabel spacinglabellol1;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
