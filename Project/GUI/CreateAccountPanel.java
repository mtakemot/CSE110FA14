package GUI;

import Backend.ImportExport;
//import Backend.HashTable;
import Backend.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/*
 * 11/9 Michio Takemoto
 * Uses import/export now, but we have a FEW issues
 ** 1) When invalid input, we have to reset all the buttons or reset the page itself 
        that all the fields will reset as well. As of now, if we tried to submit something
        invalid, but we correct it and submit, it will still be invalid as the old data
        doesn't leave
**2) Also, the text fields and password fields need the actionListener functions defined.
    to include the fields being cleared when the cursor goes to that field by using key board (tab button).
    I put in the mouseclick, but tabbing to next slot doesn't do anything.

 */
/**
 *
 * @author asharda
 */
public class CreateAccountPanel extends javax.swing.JPanel {
    
    private JPanel MainPanel;
    /**
     * Creates new form CreateAccount
     */
    public CreateAccountPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        ERRORPOP = new java.awt.PopupMenu();
        firstName = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        createUserAccount = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dismissView = new javax.swing.JButton();
        username = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        confirmPassword = new javax.swing.JPasswordField();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();

        setOpaque(false);

        firstName.setText("First Name");
        firstName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                firstNameMouseClicked(evt);
            }
        });

        password.setText("Password");

        createUserAccount.setText("Create User Account");
        createUserAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserAccountActionPerformed(evt);
            }
        });

        jButton2.setText("Already have an account? Sign in");

        jLabel1.setText("Bank 42");

        dismissView.setText("Back");

        username.setText("Username");
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
        });

        lastName.setText("Last Name");
        lastName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastNameMouseClicked(evt);
            }
        });

        confirmPassword.setText("Password");

        email.setText("Email");
        email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailMouseClicked(evt);
            }
        });

        phone.setText("Phone");
        phone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dismissView)
                        .addGap(242, 242, 242)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createUserAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(phone, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(username)
                            .addComponent(firstName)
                            .addComponent(lastName)
                            .addComponent(password)
                            .addComponent(email)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(165, 165, 165))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(dismissView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(createUserAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(6, 6, 6))
        );
    }// </editor-fold>                        
    public CreateAccountPanel(JPanel MainPanel) {
        
        this.MainPanel = MainPanel;
        initComponents();
    } 
    
    private void createUserAccountActionPerformed(java.awt.event.ActionEvent evt) {                                                  
        
        boolean operationSuccessful = false;
        
         String name1 = firstName.getText();    
         String name2 = lastName.getText();
         String user = username.getText();
         char[] input1 = password.getPassword();
         String pass1 = new String(input1);
         char[] input2 = confirmPassword.getPassword();
         String input3 = email.getText();
        String pass2 = new String(input2);
        
        if (name1.length() > 0)
        {
            if (name2.length() > 0)
           {
             if (user.length() > 0)
              {
                  
                // if (((password.getText().length()) > 0) && ((password.getText()).equals(confirmPassword.())))
                 if (((pass1.length())> 0) && (pass1.equals(pass2)))
                 {System.out.println("test1");
                    if ((input3.length() > 0) && (isValidEmailAddress(input3)))
                    {System.out.println("test2");
                        
                         if (validatePhoneNumber(phone.getText()))
                        {System.out.println("test3");
                            operationSuccessful = true;
                            System.out.println("test4");
                            UserAccount retVal = GUI.MasterTable.findUserAccount(username.getText());
                            if (retVal == null){
                                
                                UserAccount newUser = new UserAccount();
                               
                                newUser.setFirstName(firstName.getText());
                                newUser.setLastName(name2);
                                newUser.setUserName(user);
                                newUser.setPassword(pass1);
                                newUser.setEmail(input3);
                                newUser.setPhone(phone.getText());
                            newUser = GUI.MasterTable.insertUserAccount(newUser.getUserName());
                            if (newUser!= null){
                                
                            System.out.println("123123123You have successfully created your user account!");
                                JOptionPane.showMessageDialog(null, "You have successfully created your user account!", "Success!",
                                        JOptionPane.INFORMATION_MESSAGE);
                            }
                            
                            System.out.println("You have successfully created your user account!");
                                JOptionPane.showMessageDialog(null, "You have successfully created your user account!", "Success!",
                                        JOptionPane.INFORMATION_MESSAGE);
                               
                            }
                            else{
                                //print a pop up error
                                System.out.println("Error creating an account!");
                                JOptionPane.showMessageDialog(null, "USER NAME in use. Pick again", "IN USE",
                                        JOptionPane.INFORMATION_MESSAGE);
                                initComponents();
                                
                                 
                            }
                            
                                
                                
                               
                                
                               
                                
                                
                                
                            
                           //UserAccount currentUserAccount = new UserAccount(firstName.getText(),lastName.getText(),username.getText(),password.getText(),email.getText(), phone.getText(), "");
                        }
                    }
                 }
              } 
           }
        }
       
        if (!operationSuccessful)
        {
            System.out.println("Error with input format!");
            JOptionPane.showMessageDialog(null, "Error creating an account! INVALID FORMAT", "INVALID FORMAT", JOptionPane.INFORMATION_MESSAGE);
            initComponents();
        }
        
        //If we reach here, user name was 100% successfully inserted into table.
        //ANY TIME THERE's DATA CHANGING (viewing information doesn't count as changing EXPORT!
        else 
        {
           ImportExport dataout = new ImportExport();  
           if(dataout.exportDB(GUI.MasterTable)){
                            System.out.println("\nExported file to local source file"
                                    + " THROUGH CREATE ACCOUNT GUI\n");

                        }
                        else
                        {
                            System.err.println("\n\nCould not export THROUGH CREATE ACCOUNT GUI, ERROR\n\n");
                        }
          
        }
        
    }                                                 

    private void dismissViewMouseClicked(java.awt.event.MouseEvent evt) {                                         
         //retrieve MainPanel to transfer it's layout to CreateAccountPanel
        CardLayout layout = (CardLayout) (MainPanel.getLayout());
        
         //send the layout of MainPanel to new display of JPanel "CreateAcc"
        layout.previous(MainPanel);
    }                                        

    private void firstNameMouseClicked(java.awt.event.MouseEvent evt) {                                       
        firstName.setText("");
    }                                      

    private void lastNameMouseClicked(java.awt.event.MouseEvent evt) {                                      
        lastName.setText("");
    }                                     

    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {                                      
        username.setText("");
    }                                     

    private void emailMouseClicked(java.awt.event.MouseEvent evt) {                                   
        email.setText("");
    }                                  

    private void phoneMouseClicked(java.awt.event.MouseEvent evt) {                                   
        phone.setText("");
    }                                  

    private static boolean validatePhoneNumber(String phoneNo) {
        //validate phone numbers of format "1234567890"
        if (phoneNo.matches("\\d{10}")) return true;
        
        //validating phone number with -, . or spaces
        else if(phoneNo.matches("\\d{3}[-\\.\\s]\\d{3}[-\\.\\s]\\d{4}")) return true;
        
        //validating phone number with extension length from 3 to 5
        else if(phoneNo.matches("\\d{3}-\\d{3}-\\d{4}\\s(x|(ext))\\d{3,5}")) return true;
        
        //validating phone number where area code is in braces ()
        else if(phoneNo.matches("\\(\\d{3}\\)-\\d{3}-\\d{4}")) return true;
        
        //return false if nothing matches the input
        else return false;        
    }
 
    private static boolean isValidEmailAddress(String email) {
           String ePattern = "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$";
           java.util.regex.Pattern p = java.util.regex.Pattern.compile(ePattern);
           java.util.regex.Matcher m = p.matcher(email);
           return m.matches();
    }
    
    // Variables declaration - do not modify                     
    private java.awt.PopupMenu ERRORPOP;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JButton createUserAccount;
    private javax.swing.JButton dismissView;
    private javax.swing.JTextField email;
    private javax.swing.JTextField firstName;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField lastName;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField username;
    // End of variables declaration                   
}
